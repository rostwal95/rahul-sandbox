//
//Proto file for the VA flow

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file virtualagent.proto (package com.cisco.wcc.ccai.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Struct } from "./google/protobuf/struct_pb.ts";
import { DTMFConfig, SpeechTimers } from "./recognize_pb.ts";
import { Duration } from "./google/protobuf/duration_pb.ts";

/**
 *
 * [DTMF](https://en.wikipedia.org/wiki/Dual-tone_multi-frequency_signaling)
 * dtmf digit
 *
 * @generated from enum com.cisco.wcc.ccai.v1.Dtmf
 */
export enum Dtmf {
  /**
   * Not specified.
   *
   * @generated from enum value: TELEPHONY_DTMF_UNSPECIFIED = 0;
   */
  TELEPHONY_DTMF_UNSPECIFIED = 0,

  /**
   * Number: '1'.
   *
   * @generated from enum value: DTMF_ONE = 1;
   */
  DTMF_ONE = 1,

  /**
   * Number: '2'.
   *
   * @generated from enum value: DTMF_TWO = 2;
   */
  DTMF_TWO = 2,

  /**
   * Number: '3'.
   *
   * @generated from enum value: DTMF_THREE = 3;
   */
  DTMF_THREE = 3,

  /**
   * Number: '4'.
   *
   * @generated from enum value: DTMF_FOUR = 4;
   */
  DTMF_FOUR = 4,

  /**
   * Number: '5'.
   *
   * @generated from enum value: DTMF_FIVE = 5;
   */
  DTMF_FIVE = 5,

  /**
   * Number: '6'.
   *
   * @generated from enum value: DTMF_SIX = 6;
   */
  DTMF_SIX = 6,

  /**
   * Number: '7'.
   *
   * @generated from enum value: DTMF_SEVEN = 7;
   */
  DTMF_SEVEN = 7,

  /**
   * Number: '8'.
   *
   * @generated from enum value: DTMF_EIGHT = 8;
   */
  DTMF_EIGHT = 8,

  /**
   * Number: '9'.
   *
   * @generated from enum value: DTMF_NINE = 9;
   */
  DTMF_NINE = 9,

  /**
   * Number: '0'.
   *
   * @generated from enum value: DTMF_ZERO = 10;
   */
  DTMF_ZERO = 10,

  /**
   * Letter: 'A'.
   *
   * @generated from enum value: DTMF_A = 11;
   */
  DTMF_A = 11,

  /**
   * Letter: 'B'.
   *
   * @generated from enum value: DTMF_B = 12;
   */
  DTMF_B = 12,

  /**
   * Letter: 'C'.
   *
   * @generated from enum value: DTMF_C = 13;
   */
  DTMF_C = 13,

  /**
   * Letter: 'D'.
   *
   * @generated from enum value: DTMF_D = 14;
   */
  DTMF_D = 14,

  /**
   * Asterisk/star: '*'.
   *
   * @generated from enum value: DTMF_STAR = 15;
   */
  DTMF_STAR = 15,

  /**
   * Pound/diamond/hash/square/gate/octothorpe: '#'.
   *
   * @generated from enum value: DTMF_POUND = 16;
   */
  DTMF_POUND = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(Dtmf)
proto3.util.setEnumType(Dtmf, "com.cisco.wcc.ccai.v1.Dtmf", [
  { no: 0, name: "TELEPHONY_DTMF_UNSPECIFIED" },
  { no: 1, name: "DTMF_ONE" },
  { no: 2, name: "DTMF_TWO" },
  { no: 3, name: "DTMF_THREE" },
  { no: 4, name: "DTMF_FOUR" },
  { no: 5, name: "DTMF_FIVE" },
  { no: 6, name: "DTMF_SIX" },
  { no: 7, name: "DTMF_SEVEN" },
  { no: 8, name: "DTMF_EIGHT" },
  { no: 9, name: "DTMF_NINE" },
  { no: 10, name: "DTMF_ZERO" },
  { no: 11, name: "DTMF_A" },
  { no: 12, name: "DTMF_B" },
  { no: 13, name: "DTMF_C" },
  { no: 14, name: "DTMF_D" },
  { no: 15, name: "DTMF_STAR" },
  { no: 16, name: "DTMF_POUND" },
]);

/**
 *
 * Type of Input expected from User
 *
 * @generated from enum com.cisco.wcc.ccai.v1.InputMode
 */
export enum InputMode {
  /**
   * @generated from enum value: INPUT_MODE_UNSPECIFIED = 0;
   */
  INPUT_MODE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: INPUT_VOICE = 1;
   */
  INPUT_VOICE = 1,

  /**
   * @generated from enum value: INPUT_DTMF = 2;
   */
  INPUT_DTMF = 2,

  /**
   * @generated from enum value: INPUT_VOICE_DTMF = 3;
   */
  INPUT_VOICE_DTMF = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(InputMode)
proto3.util.setEnumType(InputMode, "com.cisco.wcc.ccai.v1.InputMode", [
  { no: 0, name: "INPUT_MODE_UNSPECIFIED" },
  { no: 1, name: "INPUT_VOICE" },
  { no: 2, name: "INPUT_DTMF" },
  { no: 3, name: "INPUT_VOICE_DTMF" },
]);

/**
 * List of Call Insight Types
 *
 * @generated from enum com.cisco.wcc.ccai.v1.CallInsightType
 */
export enum CallInsightType {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VA_CALL_SUMMARY = 1;
   */
  VA_CALL_SUMMARY = 1,

  /**
   * @generated from enum value: CALL_DROP_SUMMARY = 2;
   */
  CALL_DROP_SUMMARY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CallInsightType)
proto3.util.setEnumType(CallInsightType, "com.cisco.wcc.ccai.v1.CallInsightType", [
  { no: 0, name: "UNSPECIFIED" },
  { no: 1, name: "VA_CALL_SUMMARY" },
  { no: 2, name: "CALL_DROP_SUMMARY" },
]);

/**
 *
 * A wrapper of repeated TelephonyDtmf digits.
 *
 * @generated from message com.cisco.wcc.ccai.v1.DtmfEvents
 */
export class DtmfEvents extends Message<DtmfEvents> {
  /**
   * A sequence of TelephonyDtmf digits.
   *
   * @generated from field: repeated com.cisco.wcc.ccai.v1.Dtmf dtmf_events = 1;
   */
  dtmfEvents: Dtmf[] = [];

  constructor(data?: PartialMessage<DtmfEvents>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.DtmfEvents";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dtmf_events", kind: "enum", T: proto3.getEnumType(Dtmf), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DtmfEvents {
    return new DtmfEvents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DtmfEvents {
    return new DtmfEvents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DtmfEvents {
    return new DtmfEvents().fromJsonString(jsonString, options);
  }

  static equals(a: DtmfEvents | PlainMessage<DtmfEvents> | undefined, b: DtmfEvents | PlainMessage<DtmfEvents> | undefined): boolean {
    return proto3.util.equals(DtmfEvents, a, b);
  }
}

/**
 *
 * Represents the Events
 *
 * @generated from message com.cisco.wcc.ccai.v1.InputEvent
 */
export class InputEvent extends Message<InputEvent> {
  /**
   * Event Type
   *
   * @generated from field: com.cisco.wcc.ccai.v1.InputEvent.EventType event_type = 1;
   */
  eventType = InputEvent_EventType.UNSPECIFIED;

  /**
   * Optional: To be used for the custom event.
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * Optional: Map to pass the custom params.
   *
   * @generated from field: google.protobuf.Struct parameters = 3;
   */
  parameters?: Struct;

  constructor(data?: PartialMessage<InputEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.InputEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "event_type", kind: "enum", T: proto3.getEnumType(InputEvent_EventType) },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "parameters", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InputEvent {
    return new InputEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InputEvent {
    return new InputEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InputEvent {
    return new InputEvent().fromJsonString(jsonString, options);
  }

  static equals(a: InputEvent | PlainMessage<InputEvent> | undefined, b: InputEvent | PlainMessage<InputEvent> | undefined): boolean {
    return proto3.util.equals(InputEvent, a, b);
  }
}

/**
 * @generated from enum com.cisco.wcc.ccai.v1.InputEvent.EventType
 */
export enum InputEvent_EventType {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * If sent this event will make the connector to start the session with provider.
   *
   * @generated from enum value: CALL_START = 1;
   */
  CALL_START = 1,

  /**
   * @generated from enum value: CALL_END = 2;
   */
  CALL_END = 2,

  /**
   * @generated from enum value: CUSTOM = 3;
   */
  CUSTOM = 3,

  /**
   * No input event in case of no input received from caller.
   *
   * @generated from enum value: NO_INPUT = 4;
   */
  NO_INPUT = 4,

  /**
   * event to indicate start of dtmf input.
   *
   * @generated from enum value: START_OF_DTMF = 5;
   */
  START_OF_DTMF = 5,

  /**
   * event to indicate server to stop streaming the response.
   *
   * @generated from enum value: STOP_STREAMING_RESPONSE = 6;
   */
  STOP_STREAMING_RESPONSE = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(InputEvent_EventType)
proto3.util.setEnumType(InputEvent_EventType, "com.cisco.wcc.ccai.v1.InputEvent.EventType", [
  { no: 0, name: "UNSPECIFIED" },
  { no: 1, name: "CALL_START" },
  { no: 2, name: "CALL_END" },
  { no: 3, name: "CUSTOM" },
  { no: 4, name: "NO_INPUT" },
  { no: 5, name: "START_OF_DTMF" },
  { no: 6, name: "STOP_STREAMING_RESPONSE" },
]);

/**
 *
 * Represents the Response of Virtual Agent
 *
 * @generated from message com.cisco.wcc.ccai.v1.VirtualAgentResult
 */
export class VirtualAgentResult extends Message<VirtualAgentResult> {
  /**
   * Return 1 or more prompts to be played by client
   *
   * @generated from field: repeated com.cisco.wcc.ccai.v1.Prompt prompts = 1;
   */
  prompts: Prompt[] = [];

  /**
   * Provider specific Response object in JSON encoded string
   *
   * @generated from field: string response_payload = 2;
   */
  responsePayload = "";

  /**
   * NLU
   *
   * @generated from field: com.cisco.wcc.ccai.v1.NLU nlu = 3;
   */
  nlu?: NLU;

  /**
   * Input Mode for the next input
   *
   * @generated from field: com.cisco.wcc.ccai.v1.InputMode input_mode = 4;
   */
  inputMode = InputMode.INPUT_MODE_UNSPECIFIED;

  /**
   * secure flag from provider to indicate sensitive input
   *
   * @generated from field: bool is_secure = 5;
   */
  isSecure = false;

  /**
   * Request to execute the routing at client side by breaking the callflow.
   *
   * @generated from field: com.cisco.wcc.ccai.v1.ExecuteRequest execute_request = 6 [deprecated = true];
   * @deprecated
   */
  executeRequest?: ExecuteRequest;

  /**
   * VA response type from provider (Partial/Final)
   *
   * @generated from field: com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType response_type = 7;
   */
  responseType = VirtualAgentResult_ResponseType.RESPONSE_FINAL;

  /**
   * Input config for the clients to handle timeouts and buffering of DTMF user inputs
   *
   * @generated from field: com.cisco.wcc.ccai.v1.InputConfigInfer input_config_infer = 8;
   */
  inputConfigInfer?: InputConfigInfer;

  /**
   * Maximum silence,  in ms, allowed while waiting for user input after recognition timers are started. A value of 0 means no timeout.
   *
   * @generated from field: int32 no_input_timeout_ms = 9;
   */
  noInputTimeoutMs = 0;

  /**
   * Indicates whether the partial automated agent reply is non-interruptible when a later reply message arrives. e.g., if the agent specified some music as a partial response, it cannot be canceled if set to true. The default value is false.
   *
   * @generated from field: bool disable_prompt_cancellation = 10;
   */
  disablePromptCancellation = false;

  /**
   * The media streaming should start immediately after receiving EVENT_END_OF_INPUT event.
   *
   * @generated from field: bool early_media_restart = 11;
   */
  earlyMediaRestart = false;

  /**
   * indicates prompts are static in nature and synthesed audio can be cached by client
   *
   * @generated from field: bool is_prompt_cacheable = 12;
   */
  isPromptCacheable = false;

  constructor(data?: PartialMessage<VirtualAgentResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.VirtualAgentResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "prompts", kind: "message", T: Prompt, repeated: true },
    { no: 2, name: "response_payload", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nlu", kind: "message", T: NLU },
    { no: 4, name: "input_mode", kind: "enum", T: proto3.getEnumType(InputMode) },
    { no: 5, name: "is_secure", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "execute_request", kind: "message", T: ExecuteRequest },
    { no: 7, name: "response_type", kind: "enum", T: proto3.getEnumType(VirtualAgentResult_ResponseType) },
    { no: 8, name: "input_config_infer", kind: "message", T: InputConfigInfer },
    { no: 9, name: "no_input_timeout_ms", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "disable_prompt_cancellation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "early_media_restart", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "is_prompt_cacheable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VirtualAgentResult {
    return new VirtualAgentResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VirtualAgentResult {
    return new VirtualAgentResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VirtualAgentResult {
    return new VirtualAgentResult().fromJsonString(jsonString, options);
  }

  static equals(a: VirtualAgentResult | PlainMessage<VirtualAgentResult> | undefined, b: VirtualAgentResult | PlainMessage<VirtualAgentResult> | undefined): boolean {
    return proto3.util.equals(VirtualAgentResult, a, b);
  }
}

/**
 * @generated from enum com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType
 */
export enum VirtualAgentResult_ResponseType {
  /**
   * No more response expected
   *
   * @generated from enum value: RESPONSE_FINAL = 0;
   */
  RESPONSE_FINAL = 0,

  /**
   * Expect more response from server
   *
   * @generated from enum value: RESPONSE_PARTIAL = 1;
   */
  RESPONSE_PARTIAL = 1,

  /**
   * To enable the streaming flow.
   *
   * @generated from enum value: RESPONSE_CHUNK = 2;
   */
  RESPONSE_CHUNK = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(VirtualAgentResult_ResponseType)
proto3.util.setEnumType(VirtualAgentResult_ResponseType, "com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType", [
  { no: 0, name: "RESPONSE_FINAL" },
  { no: 1, name: "RESPONSE_PARTIAL" },
  { no: 2, name: "RESPONSE_CHUNK" },
]);

/**
 *
 * Input config for the client.
 *
 * @generated from message com.cisco.wcc.ccai.v1.InputConfigInfer
 */
export class InputConfigInfer extends Message<InputConfigInfer> {
  /**
   * DTMF Input Configurations
   *
   * @generated from field: com.cisco.wcc.ccai.v1.DTMFConfig dtmf_config = 1;
   */
  dtmfConfig?: DTMFConfig;

  /**
   * Represents the TimerInfo object
   *
   * @generated from field: com.cisco.wcc.ccai.v1.SpeechTimers speech_timers = 2;
   */
  speechTimers?: SpeechTimers;

  constructor(data?: PartialMessage<InputConfigInfer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.InputConfigInfer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dtmf_config", kind: "message", T: DTMFConfig },
    { no: 2, name: "speech_timers", kind: "message", T: SpeechTimers },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InputConfigInfer {
    return new InputConfigInfer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InputConfigInfer {
    return new InputConfigInfer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InputConfigInfer {
    return new InputConfigInfer().fromJsonString(jsonString, options);
  }

  static equals(a: InputConfigInfer | PlainMessage<InputConfigInfer> | undefined, b: InputConfigInfer | PlainMessage<InputConfigInfer> | undefined): boolean {
    return proto3.util.equals(InputConfigInfer, a, b);
  }
}

/**
 * *
 * Event received from the Virtual Agent
 *
 * @generated from message com.cisco.wcc.ccai.v1.ExitEvent
 */
export class ExitEvent extends Message<ExitEvent> {
  /**
   * Event Type
   *
   * @generated from field: com.cisco.wcc.ccai.v1.ExitEvent.EventType event_type = 1;
   */
  eventType = ExitEvent_EventType.UNSPECIFIED;

  /**
   * Optional: To be used for the custom event.
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * Optional: Map to pass the custom params.
   *
   * @generated from field: google.protobuf.Struct metadata = 3;
   */
  metadata?: Struct;

  constructor(data?: PartialMessage<ExitEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.ExitEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "event_type", kind: "enum", T: proto3.getEnumType(ExitEvent_EventType) },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExitEvent {
    return new ExitEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExitEvent {
    return new ExitEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExitEvent {
    return new ExitEvent().fromJsonString(jsonString, options);
  }

  static equals(a: ExitEvent | PlainMessage<ExitEvent> | undefined, b: ExitEvent | PlainMessage<ExitEvent> | undefined): boolean {
    return proto3.util.equals(ExitEvent, a, b);
  }
}

/**
 * @generated from enum com.cisco.wcc.ccai.v1.ExitEvent.EventType
 */
export enum ExitEvent_EventType {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VA_CALL_END = 1;
   */
  VA_CALL_END = 1,

  /**
   * @generated from enum value: AGENT_TRANSFER = 2;
   */
  AGENT_TRANSFER = 2,

  /**
   * @generated from enum value: CUSTOM = 3;
   */
  CUSTOM = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ExitEvent_EventType)
proto3.util.setEnumType(ExitEvent_EventType, "com.cisco.wcc.ccai.v1.ExitEvent.EventType", [
  { no: 0, name: "UNSPECIFIED" },
  { no: 1, name: "VA_CALL_END" },
  { no: 2, name: "AGENT_TRANSFER" },
  { no: 3, name: "CUSTOM" },
]);

/**
 *
 * NLU Object generated from User Utterance.
 *
 * @generated from message com.cisco.wcc.ccai.v1.NLU
 */
export class NLU extends Message<NLU> {
  /**
   * Response in text. This will be used for Virtual Agent Transcript.
   *
   * @generated from field: repeated string reply_text = 1;
   */
  replyText: string[] = [];

  /**
   * Intent detected from the last utterance.
   *
   * @generated from field: com.cisco.wcc.ccai.v1.Intent intent = 2;
   */
  intent?: Intent;

  /**
   * Sent when the call is transferred to Agent
   *
   * @generated from field: com.cisco.wcc.ccai.v1.AgentTransfer agent_transfer = 3 [deprecated = true];
   * @deprecated
   */
  agentTransfer?: AgentTransfer;

  /**
   * Call Ended
   *
   * @generated from field: com.cisco.wcc.ccai.v1.EndVirtualAgent end_virtual_agent = 4 [deprecated = true];
   * @deprecated
   */
  endVirtualAgent?: EndVirtualAgent;

  /**
   * user input uttered by caller
   *
   * @generated from field: string input_text = 5;
   */
  inputText = "";

  /**
   * Exit Event to return the control back to the calling flow
   *
   * @generated from field: com.cisco.wcc.ccai.v1.ExitEvent exit_event = 6;
   */
  exitEvent?: ExitEvent;

  constructor(data?: PartialMessage<NLU>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.NLU";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reply_text", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "intent", kind: "message", T: Intent },
    { no: 3, name: "agent_transfer", kind: "message", T: AgentTransfer },
    { no: 4, name: "end_virtual_agent", kind: "message", T: EndVirtualAgent },
    { no: 5, name: "input_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "exit_event", kind: "message", T: ExitEvent },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NLU {
    return new NLU().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NLU {
    return new NLU().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NLU {
    return new NLU().fromJsonString(jsonString, options);
  }

  static equals(a: NLU | PlainMessage<NLU> | undefined, b: NLU | PlainMessage<NLU> | undefined): boolean {
    return proto3.util.equals(NLU, a, b);
  }
}

/**
 * *
 * Call Insights Object for VA Call Summary
 *
 * @generated from message com.cisco.wcc.ccai.v1.CallInsightsResult
 */
export class CallInsightsResult extends Message<CallInsightsResult> {
  /**
   * Content
   *
   * @generated from field: string content = 1;
   */
  content = "";

  /**
   * Call Insight Type
   *
   * @generated from field: com.cisco.wcc.ccai.v1.CallInsightType callInsightType = 2;
   */
  callInsightType = CallInsightType.UNSPECIFIED;

  constructor(data?: PartialMessage<CallInsightsResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.CallInsightsResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "callInsightType", kind: "enum", T: proto3.getEnumType(CallInsightType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallInsightsResult {
    return new CallInsightsResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallInsightsResult {
    return new CallInsightsResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallInsightsResult {
    return new CallInsightsResult().fromJsonString(jsonString, options);
  }

  static equals(a: CallInsightsResult | PlainMessage<CallInsightsResult> | undefined, b: CallInsightsResult | PlainMessage<CallInsightsResult> | undefined): boolean {
    return proto3.util.equals(CallInsightsResult, a, b);
  }
}

/**
 *
 * Represents the Intent Detected form user utterance
 *
 * @generated from message com.cisco.wcc.ccai.v1.Intent
 */
export class Intent extends Message<Intent> {
  /**
   * Name of the Intent
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the Intent
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Parameters of an Intent, filled / not filled.
   *
   * @generated from field: google.protobuf.Struct parameters = 3;
   */
  parameters?: Struct;

  /**
   * Match Confidence
   *
   * @generated from field: float match_confidence = 4;
   */
  matchConfidence = 0;

  constructor(data?: PartialMessage<Intent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.Intent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "parameters", kind: "message", T: Struct },
    { no: 4, name: "match_confidence", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Intent {
    return new Intent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Intent {
    return new Intent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Intent {
    return new Intent().fromJsonString(jsonString, options);
  }

  static equals(a: Intent | PlainMessage<Intent> | undefined, b: Intent | PlainMessage<Intent> | undefined): boolean {
    return proto3.util.equals(Intent, a, b);
  }
}

/**
 *
 * Call Transferred to Human Agent
 *
 * @generated from message com.cisco.wcc.ccai.v1.AgentTransfer
 */
export class AgentTransfer extends Message<AgentTransfer> {
  /**
   * Call Transfer Metadata
   *
   * @generated from field: google.protobuf.Struct metadata = 1;
   */
  metadata?: Struct;

  constructor(data?: PartialMessage<AgentTransfer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.AgentTransfer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentTransfer {
    return new AgentTransfer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentTransfer {
    return new AgentTransfer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentTransfer {
    return new AgentTransfer().fromJsonString(jsonString, options);
  }

  static equals(a: AgentTransfer | PlainMessage<AgentTransfer> | undefined, b: AgentTransfer | PlainMessage<AgentTransfer> | undefined): boolean {
    return proto3.util.equals(AgentTransfer, a, b);
  }
}

/**
 *
 * Represents the Virtual Agent End Indication
 *
 * @generated from message com.cisco.wcc.ccai.v1.EndVirtualAgent
 */
export class EndVirtualAgent extends Message<EndVirtualAgent> {
  /**
   * Call Transfer Metadata
   *
   * @generated from field: google.protobuf.Struct metadata = 1;
   */
  metadata?: Struct;

  constructor(data?: PartialMessage<EndVirtualAgent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.EndVirtualAgent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndVirtualAgent {
    return new EndVirtualAgent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndVirtualAgent {
    return new EndVirtualAgent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndVirtualAgent {
    return new EndVirtualAgent().fromJsonString(jsonString, options);
  }

  static equals(a: EndVirtualAgent | PlainMessage<EndVirtualAgent> | undefined, b: EndVirtualAgent | PlainMessage<EndVirtualAgent> | undefined): boolean {
    return proto3.util.equals(EndVirtualAgent, a, b);
  }
}

/**
 *
 * Prompt object to be played by Client.
 * Google / Nuance
 * // Google: Merge the response messages with text and audio into one Prompt object.
 * // Nuance:
 *
 * @generated from message com.cisco.wcc.ccai.v1.Prompt
 */
export class Prompt extends Message<Prompt> {
  /**
   * Response in text.
   *
   * @generated from field: string text = 1;
   */
  text = "";

  /**
   * Response in the form of a Audio URL. Client Need to play the locally. Optional
   *
   * @generated from field: string audio_uri = 2;
   */
  audioUri = "";

  /**
   * Response in the form of Audio Content. In case of Chunked audio this will repeat. Optional
   *
   * @generated from field: bytes audio_content = 3;
   */
  audioContent = new Uint8Array(0);

  /**
   * Whether the current prompt is barge-in enabled. Optional, Default: false
   *
   * @generated from field: bool bargein = 4;
   */
  bargein = false;

  /**
   * Whether the current chunk is last chunk. Optional, Default: false
   *
   * @generated from field: bool final = 5;
   */
  final = false;

  constructor(data?: PartialMessage<Prompt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.Prompt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "audio_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "audio_content", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "bargein", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "final", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Prompt {
    return new Prompt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Prompt {
    return new Prompt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Prompt {
    return new Prompt().fromJsonString(jsonString, options);
  }

  static equals(a: Prompt | PlainMessage<Prompt> | undefined, b: Prompt | PlainMessage<Prompt> | undefined): boolean {
    return proto3.util.equals(Prompt, a, b);
  }
}

/**
 *
 * Message containing the details of the event being called by Dialog Manager to be executed on client side.
 *
 * @generated from message com.cisco.wcc.ccai.v1.ExecuteRequest
 */
export class ExecuteRequest extends Message<ExecuteRequest> {
  /**
   * Name of the event to be used to return back to the callflow.
   *
   * @generated from field: string event_name = 1;
   */
  eventName = "";

  /**
   * Custom data to be used by the client to execute the request.
   *
   * @generated from field: string event_data = 2;
   */
  eventData = "";

  constructor(data?: PartialMessage<ExecuteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.ExecuteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "event_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "event_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteRequest {
    return new ExecuteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteRequest {
    return new ExecuteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteRequest {
    return new ExecuteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ExecuteRequest | PlainMessage<ExecuteRequest> | undefined, b: ExecuteRequest | PlainMessage<ExecuteRequest> | undefined): boolean {
    return proto3.util.equals(ExecuteRequest, a, b);
  }
}

/**
 * @generated from message com.cisco.wcc.ccai.v1.VirtualAgent
 */
export class VirtualAgent extends Message<VirtualAgent> {
  /**
   * Indicates the bots unique identifier
   *
   * @generated from field: string virtualAgentId = 1;
   */
  virtualAgentId = "";

  /**
   * Indicates the bot name
   *
   * @generated from field: string virtualAgentName = 2;
   */
  virtualAgentName = "";

  /**
   * Indicates whether the respective bot is a default bot for the selected provider
   *
   * @generated from field: bool isDefault = 3;
   */
  isDefault = false;

  /**
   * Any additional attributes that are required
   *
   * @generated from field: map<string, string> additionalAttributes = 4;
   */
  additionalAttributes: { [key: string]: string } = {};

  constructor(data?: PartialMessage<VirtualAgent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.VirtualAgent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "virtualAgentId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "virtualAgentName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "isDefault", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "additionalAttributes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VirtualAgent {
    return new VirtualAgent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VirtualAgent {
    return new VirtualAgent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VirtualAgent {
    return new VirtualAgent().fromJsonString(jsonString, options);
  }

  static equals(a: VirtualAgent | PlainMessage<VirtualAgent> | undefined, b: VirtualAgent | PlainMessage<VirtualAgent> | undefined): boolean {
    return proto3.util.equals(VirtualAgent, a, b);
  }
}

/**
 *
 * Configuration of barge-in behavior during the streaming of input audio.
 *
 * @generated from message com.cisco.wcc.ccai.v1.InputBargeInConfig
 */
export class InputBargeInConfig extends Message<InputBargeInConfig> {
  /**
   * Duration that is not eligible for barge-in at the beginning of the input audio.
   *
   * @generated from field: google.protobuf.Duration no_barge_in_duration = 1;
   */
  noBargeInDuration?: Duration;

  /**
   * Total duration for the playback at the beginning of the input audio.
   *
   * @generated from field: google.protobuf.Duration total_duration = 2;
   */
  totalDuration?: Duration;

  constructor(data?: PartialMessage<InputBargeInConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.InputBargeInConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "no_barge_in_duration", kind: "message", T: Duration },
    { no: 2, name: "total_duration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InputBargeInConfig {
    return new InputBargeInConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InputBargeInConfig {
    return new InputBargeInConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InputBargeInConfig {
    return new InputBargeInConfig().fromJsonString(jsonString, options);
  }

  static equals(a: InputBargeInConfig | PlainMessage<InputBargeInConfig> | undefined, b: InputBargeInConfig | PlainMessage<InputBargeInConfig> | undefined): boolean {
    return proto3.util.equals(InputBargeInConfig, a, b);
  }
}

