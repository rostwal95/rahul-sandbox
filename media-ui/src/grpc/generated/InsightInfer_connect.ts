//
//This proto file contains the SpeechInsightOrchestrator API. It takes
//a Voice stream as input and provides AI insights including Transcripts and
//Agent Assist. The insights are delivered through a separate Serving API

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file InsightInfer.proto (package com.cisco.wccai.speech.aiinsight.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InferRequest, InferResponse, ListVirtualAgentsRequest, ListVirtualAgentsResponse, StreamingSpeechInferRequest, StreamingSpeechInferResponse } from "./InsightInfer_pb.ts";
import { MethodKind } from "@bufbuild/protobuf";

/**
 *
 * Orchestrator service to be used by the clients while making speech insight requests
 *
 * @generated from service com.cisco.wccai.speech.aiinsight.v1.SpeechInsightOrchestrator
 */
export const SpeechInsightOrchestrator = {
  typeName: "com.cisco.wccai.speech.aiinsight.v1.SpeechInsightOrchestrator",
  methods: {
    /**
     *
     * The Service that takes speech as input and produces multiple insights
     *
     * @generated from rpc com.cisco.wccai.speech.aiinsight.v1.SpeechInsightOrchestrator.InferStreamingSpeechInsights
     */
    inferStreamingSpeechInsights: {
      name: "InferStreamingSpeechInsights",
      I: StreamingSpeechInferRequest,
      O: StreamingSpeechInferResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     *
     * The Service that takes text as input and produces insights
     *
     * @generated from rpc com.cisco.wccai.speech.aiinsight.v1.SpeechInsightOrchestrator.UnaryInferInsights
     */
    unaryInferInsights: {
      name: "UnaryInferInsights",
      I: InferRequest,
      O: InferResponse,
      kind: MethodKind.Unary,
    },
    /**
     *
     * The Service that takes config and org id and returns a list of bots for the specific provider
     *
     * @generated from rpc com.cisco.wccai.speech.aiinsight.v1.SpeechInsightOrchestrator.ListVirtualAgents
     */
    listVirtualAgents: {
      name: "ListVirtualAgents",
      I: ListVirtualAgentsRequest,
      O: ListVirtualAgentsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

