// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file activity.proto (package com.cisco.wcc.ccai.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { InputEvent, VirtualAgent, VirtualAgentResult } from "./virtualagent_pb.js";
import { Struct } from "./google/protobuf/struct_pb.js";
import { CmsConfig } from "./utils_pb.js";
import { Model, RecognitionResource, SpeechContext, SpeechRecognitionAlternative } from "./recognize_pb.ts";
import { AudioConfig } from "./tts_pb.ts";

/**
 * @generated from message com.cisco.wcc.ccai.v1.GetActivityRequest
 */
export class GetActivityRequest extends Message<GetActivityRequest> {
  /**
   * Call Event from Client 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.InputEvent input_event = 1;
   */
  inputEvent?: InputEvent;

  /**
   *  Unique conversationId. Callguid will be used as conversationId 
   *
   * @generated from field: string conversation_id = 2;
   */
  conversationId = "";

  /**
   * OrgId for supporting OrgId based access 
   *
   * @generated from field: string org_id = 3;
   */
  orgId = "";

  /**
   * Unique Dialog ID for a conversation 
   *
   * @generated from field: string message_id = 4;
   */
  messageId = "";

  /**
   * Result of recognition based on previous request 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.RecognitionResult recognition_result = 5;
   */
  recognitionResult?: RecognitionResult;

  /**
   * Return the previous Activity context  
   *
   * @generated from field: google.protobuf.Struct activity_context = 6;
   */
  activityContext?: Struct;

  /**
   * cms config for activity service 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.CmsConfig cms_config = 7;
   */
  cmsConfig?: CmsConfig;

  /**
   * Optional field: populate if needed to call specific bot from the respective provider
   *
   * @generated from field: string virtualAgentId = 8;
   */
  virtualAgentId = "";

  /**
   * language to be sent to NLU for multi language support
   *
   * @generated from field: string language = 9;
   */
  language = "";

  /**
   * Provider specific Request object in JSON encoded string
   *
   * @generated from field: string request_payload = 10;
   */
  requestPayload = "";

  /**
   * Indicates whether the client needs a streaming response from server
   *
   * @generated from field: bool streaming_response = 11;
   */
  streamingResponse = false;

  /**
   * Unique identifier for a dialog session within Conversation/Call/Interaction, Value will be unique per Conversation Id
   *
   * @generated from field: string legId = 12;
   */
  legId = "";

  /**
   * Auto increament for each dialog within call_leg, will be unique per legId
   *
   * @generated from field: int32 dialogId = 13;
   */
  dialogId = 0;

  constructor(data?: PartialMessage<GetActivityRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.GetActivityRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "input_event", kind: "message", T: InputEvent },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "recognition_result", kind: "message", T: RecognitionResult },
    { no: 6, name: "activity_context", kind: "message", T: Struct },
    { no: 7, name: "cms_config", kind: "message", T: CmsConfig },
    { no: 8, name: "virtualAgentId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "request_payload", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "streaming_response", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "legId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "dialogId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActivityRequest {
    return new GetActivityRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActivityRequest {
    return new GetActivityRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActivityRequest {
    return new GetActivityRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetActivityRequest | PlainMessage<GetActivityRequest> | undefined, b: GetActivityRequest | PlainMessage<GetActivityRequest> | undefined): boolean {
    return proto3.util.equals(GetActivityRequest, a, b);
  }
}

/**
 * @generated from message com.cisco.wcc.ccai.v1.RecognitionResult
 */
export class RecognitionResult extends Message<RecognitionResult> {
  /**
   * User Input 
   *
   * @generated from oneof com.cisco.wcc.ccai.v1.RecognitionResult.UserInput
   */
  UserInput: {
    /**
     * Voice Input 
     *
     * @generated from field: string voice = 1;
     */
    value: string;
    case: "voice";
  } | {
    /**
     * DTMF Input 
     *
     * @generated from field: string dtmf = 2;
     */
    value: string;
    case: "dtmf";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: repeated com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative alternatives = 3;
   */
  alternatives: SpeechRecognitionAlternative[] = [];

  /**
   * @generated from field: com.cisco.wcc.ccai.v1.RecognitionResult.DialogEvent dialog_event = 4;
   */
  dialogEvent = RecognitionResult_DialogEvent.SUCCESS;

  /**
   * @generated from field: com.cisco.wcc.ccai.v1.RecognitionResult.FailureReason failure_reason = 5;
   */
  failureReason = RecognitionResult_FailureReason.FAILURE_INVALID_URL;

  /**
   *  If false, this represents an interim/partial transcript. If true, this is the final transcript marked by ASR engine. 
   *
   * @generated from field: bool is_final = 6;
   */
  isFinal = false;

  constructor(data?: PartialMessage<RecognitionResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.RecognitionResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "voice", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "UserInput" },
    { no: 2, name: "dtmf", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "UserInput" },
    { no: 3, name: "alternatives", kind: "message", T: SpeechRecognitionAlternative, repeated: true },
    { no: 4, name: "dialog_event", kind: "enum", T: proto3.getEnumType(RecognitionResult_DialogEvent) },
    { no: 5, name: "failure_reason", kind: "enum", T: proto3.getEnumType(RecognitionResult_FailureReason) },
    { no: 6, name: "is_final", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecognitionResult {
    return new RecognitionResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecognitionResult {
    return new RecognitionResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecognitionResult {
    return new RecognitionResult().fromJsonString(jsonString, options);
  }

  static equals(a: RecognitionResult | PlainMessage<RecognitionResult> | undefined, b: RecognitionResult | PlainMessage<RecognitionResult> | undefined): boolean {
    return proto3.util.equals(RecognitionResult, a, b);
  }
}

/**
 * Dialog Events
 *
 * @generated from enum com.cisco.wcc.ccai.v1.RecognitionResult.DialogEvent
 */
export enum RecognitionResult_DialogEvent {
  /**
   * Activity Successfully executed
   *
   * @generated from enum value: SUCCESS = 0;
   */
  SUCCESS = 0,

  /**
   * No Input from User
   *
   * @generated from enum value: NO_INPUT = 1;
   */
  NO_INPUT = 1,

  /**
   * User input does not matches
   *
   * @generated from enum value: NO_MATCH = 2;
   */
  NO_MATCH = 2,

  /**
   * There is an error in activity execution
   *
   * @generated from enum value: FAILURE = 3;
   */
  FAILURE = 3,

  /**
   * Start of speech from VAD or STT, whichever returns first.
   *
   * @generated from enum value: START_OF_INPUT = 4;
   */
  START_OF_INPUT = 4,

  /**
   * End of speech from VAD or STT, whichever returns first.
   *
   * @generated from enum value: END_OF_INPUT = 5;
   */
  END_OF_INPUT = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(RecognitionResult_DialogEvent)
proto3.util.setEnumType(RecognitionResult_DialogEvent, "com.cisco.wcc.ccai.v1.RecognitionResult.DialogEvent", [
  { no: 0, name: "SUCCESS" },
  { no: 1, name: "NO_INPUT" },
  { no: 2, name: "NO_MATCH" },
  { no: 3, name: "FAILURE" },
  { no: 4, name: "START_OF_INPUT" },
  { no: 5, name: "END_OF_INPUT" },
]);

/**
 * @generated from enum com.cisco.wcc.ccai.v1.RecognitionResult.FailureReason
 */
export enum RecognitionResult_FailureReason {
  /**
   * @generated from enum value: FAILURE_INVALID_URL = 0;
   */
  FAILURE_INVALID_URL = 0,

  /**
   * @generated from enum value: FAILURE_INVALID_CONFIG = 1;
   */
  FAILURE_INVALID_CONFIG = 1,

  /**
   * @generated from enum value: FAILURE_INVALID_CONNECTOR = 2;
   */
  FAILURE_INVALID_CONNECTOR = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RecognitionResult_FailureReason)
proto3.util.setEnumType(RecognitionResult_FailureReason, "com.cisco.wcc.ccai.v1.RecognitionResult.FailureReason", [
  { no: 0, name: "FAILURE_INVALID_URL" },
  { no: 1, name: "FAILURE_INVALID_CONFIG" },
  { no: 2, name: "FAILURE_INVALID_CONNECTOR" },
]);

/**
 * @generated from message com.cisco.wcc.ccai.v1.GetActivityResponse
 */
export class GetActivityResponse extends Message<GetActivityResponse> {
  /**
   * @generated from field: com.cisco.wcc.ccai.v1.VirtualAgentResult virtualAgenResult = 1;
   */
  virtualAgenResult?: VirtualAgentResult;

  /**
   * Required: Configuration for User Input 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.InputConfig input_config = 2;
   */
  inputConfig?: InputConfig;

  /**
   * Optional: Indicates the config id for services the service provider to be choosen based on this config.
   * Will default to Default CCAI Config if not provider 
   *
   * @generated from field: string ccai_config_id = 3;
   */
  ccaiConfigId = "";

  /**
   * Optional: Struct to capture any additional or miscellaneous info 
   *
   * @generated from field: google.protobuf.Struct activity_context = 4;
   */
  activityContext?: Struct;

  /**
   * Required: Configuration for speech synthesis 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.OutputAudioConfig output_audio_config = 5;
   */
  outputAudioConfig?: OutputAudioConfig;

  /**
   * Optional: Placeholder to pass any hints/keywords for increased accurancy in recognition 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.SpeechContext speech_context = 6;
   */
  speechContext?: SpeechContext;

  constructor(data?: PartialMessage<GetActivityResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.GetActivityResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "virtualAgenResult", kind: "message", T: VirtualAgentResult },
    { no: 2, name: "input_config", kind: "message", T: InputConfig },
    { no: 3, name: "ccai_config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "activity_context", kind: "message", T: Struct },
    { no: 5, name: "output_audio_config", kind: "message", T: OutputAudioConfig },
    { no: 6, name: "speech_context", kind: "message", T: SpeechContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActivityResponse {
    return new GetActivityResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActivityResponse {
    return new GetActivityResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActivityResponse {
    return new GetActivityResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetActivityResponse | PlainMessage<GetActivityResponse> | undefined, b: GetActivityResponse | PlainMessage<GetActivityResponse> | undefined): boolean {
    return proto3.util.equals(GetActivityResponse, a, b);
  }
}

/**
 * @generated from message com.cisco.wcc.ccai.v1.OutputAudioConfig
 */
export class OutputAudioConfig extends Message<OutputAudioConfig> {
  /**
   * Audio Config for Synthesys 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.AudioConfig audio_config = 1;
   */
  audioConfig?: AudioConfig;

  /**
   * Synthesis Connector Id 
   *
   * @generated from field: string connector_id = 2;
   */
  connectorId = "";

  constructor(data?: PartialMessage<OutputAudioConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.OutputAudioConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "audio_config", kind: "message", T: AudioConfig },
    { no: 2, name: "connector_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutputAudioConfig {
    return new OutputAudioConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutputAudioConfig {
    return new OutputAudioConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutputAudioConfig {
    return new OutputAudioConfig().fromJsonString(jsonString, options);
  }

  static equals(a: OutputAudioConfig | PlainMessage<OutputAudioConfig> | undefined, b: OutputAudioConfig | PlainMessage<OutputAudioConfig> | undefined): boolean {
    return proto3.util.equals(OutputAudioConfig, a, b);
  }
}

/**
 * Configuration for the user input 
 *
 * @generated from message com.cisco.wcc.ccai.v1.InputConfig
 */
export class InputConfig extends Message<InputConfig> {
  /**
   * Grammar 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.RecognitionResource recognition_resource = 1;
   */
  recognitionResource?: RecognitionResource;

  /**
   * Recognition Language 
   *
   * @generated from field: string language_code = 2;
   */
  languageCode = "";

  /**
   * Recognition Model 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.Model model = 3;
   */
  model?: Model;

  constructor(data?: PartialMessage<InputConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.InputConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "recognition_resource", kind: "message", T: RecognitionResource },
    { no: 2, name: "language_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InputConfig {
    return new InputConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InputConfig {
    return new InputConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InputConfig {
    return new InputConfig().fromJsonString(jsonString, options);
  }

  static equals(a: InputConfig | PlainMessage<InputConfig> | undefined, b: InputConfig | PlainMessage<InputConfig> | undefined): boolean {
    return proto3.util.equals(InputConfig, a, b);
  }
}

/**
 * @generated from message com.cisco.wcc.ccai.v1.ListVirtualAgentsRequest
 */
export class ListVirtualAgentsRequest extends Message<ListVirtualAgentsRequest> {
  /**
   * Org Identifier (control hub) for which the insights need to be delivered
   *
   * @generated from field: string orgId = 1;
   */
  orgId = "";

  /**
   * cms config for activity service 
   *
   * @generated from field: com.cisco.wcc.ccai.v1.CmsConfig cms_config = 2;
   */
  cmsConfig?: CmsConfig;

  constructor(data?: PartialMessage<ListVirtualAgentsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.ListVirtualAgentsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orgId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cms_config", kind: "message", T: CmsConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListVirtualAgentsRequest {
    return new ListVirtualAgentsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListVirtualAgentsRequest {
    return new ListVirtualAgentsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListVirtualAgentsRequest {
    return new ListVirtualAgentsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListVirtualAgentsRequest | PlainMessage<ListVirtualAgentsRequest> | undefined, b: ListVirtualAgentsRequest | PlainMessage<ListVirtualAgentsRequest> | undefined): boolean {
    return proto3.util.equals(ListVirtualAgentsRequest, a, b);
  }
}

/**
 * @generated from message com.cisco.wcc.ccai.v1.ListVirtualAgentsResponse
 */
export class ListVirtualAgentsResponse extends Message<ListVirtualAgentsResponse> {
  /**
   * Indicates the list of bots for the selected provider
   *
   * @generated from field: repeated com.cisco.wcc.ccai.v1.VirtualAgent virtualAgents = 1;
   */
  virtualAgents: VirtualAgent[] = [];

  constructor(data?: PartialMessage<ListVirtualAgentsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.cisco.wcc.ccai.v1.ListVirtualAgentsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "virtualAgents", kind: "message", T: VirtualAgent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListVirtualAgentsResponse {
    return new ListVirtualAgentsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListVirtualAgentsResponse {
    return new ListVirtualAgentsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListVirtualAgentsResponse {
    return new ListVirtualAgentsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListVirtualAgentsResponse | PlainMessage<ListVirtualAgentsResponse> | undefined, b: ListVirtualAgentsResponse | PlainMessage<ListVirtualAgentsResponse> | undefined): boolean {
    return proto3.util.equals(ListVirtualAgentsResponse, a, b);
  }
}

